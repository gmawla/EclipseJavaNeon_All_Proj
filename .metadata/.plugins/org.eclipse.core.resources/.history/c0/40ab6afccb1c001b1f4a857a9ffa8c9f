package TestCases;

import java.io.IOException;

import org.openqa.selenium.WebDriver;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;

import Utilities.ExtentReporterNG;
import Utilities.base;



public class Listener extends base implements ITestListener {
	ExtentTest test;
	/*
	 * add unimplemented methods for Listener or right click class file>
	 * source>override/implement methods>click all ITestListener check box>okay
	 */
	ExtentReports extent = ExtentReporterNG.getReportObject();
	ThreadLocal<ExtentTest> extentTest = new ThreadLocal<ExtentTest>();

//ThreadLocal class responsible to make all execution thread safe.
	// calling extent from ExtentReporterNG class
	public void onTestStart(ITestResult result) {
		test = extent.createTest(result.getMethod().getMethodName());
		extentTest.set(test);// this will allow to test run in parallel without problems.

		// ExtentTest test = extent.createTest("Initial Demo");
		// Declaring extent report here will let every test case come in here first
		// this to avoid declaring extent in every test cases
	}

	public void onTestSuccess(ITestResult result) {
		// TODO Auto-generated method stub
		extentTest.get().log(Status.PASS, "Test Passed.");
		// this will get the right method when test is pass without any confusion.
		// test.log(Status.PASS, "Test Passed.");
	}

	public void onTestFailure(ITestResult result) {
		extentTest.get().fail(result.getThrowable());
		/* Steps: */

		// TODO Auto-generated method stub
		// to get method name upon failure and pass to base class
		WebDriver driver = null;// step 3-creating dummy WebDriver
		String testMethodName = result.getMethod().getMethodName(); // step 1
		// to access driver of failed test case
		// result.getTestClass().getRealClass().getDeclaredField("fieldName").get(result.getInstance());

		try {
			driver = (WebDriver) result.getTestClass().getRealClass().getDeclaredField("driver")
					.get(result.getInstance());
			// step 2-add try-catch
		} catch (Exception e) {
			// step 3--remove all catches, add only generic "Exception e"
		}

		/*
		 * catch (IllegalArgumentException e1) { // TODO Auto-generated catch block
		 * e1.printStackTrace(); } catch (IllegalAccessException e1) { // TODO
		 * Auto-generated catch block e1.printStackTrace(); } catch
		 * (NoSuchFieldException e1) { // TODO Auto-generated catch block
		 * e1.printStackTrace(); } catch (SecurityException e1) { // TODO Auto-generated
		 * catch block e1.printStackTrace(); }
		 */

		try {
			//getScreenShotPath(testMethodName, driver); // step 4 add driver parameter, add to base class methods
														// as well
			extentTest.get().addScreenCaptureFromPath(getScreenShotPathER(testMethodName, driver), result.getMethod().getMethodName());
			
			//extentTest.get().addScreenCaptureFromPath(path, title);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} // step 1-surround with try-catch

	}

	public void onTestSkipped(ITestResult result) {
		// TODO Auto-generated method stub

	}

	public void onTestFailedButWithinSuccessPercentage(ITestResult result) {
		// TODO Auto-generated method stub

	}

	public void onStart(ITestContext context) {
		// TODO Auto-generated method stub

	}

	public void onFinish(ITestContext context) {
		// TODO Auto-generated method stub
		extent.flush();
	}

}
